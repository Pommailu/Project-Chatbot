const { GoogleGenerativeAI } = require("@google/generative-ai");
const axios = require("axios");

const genAI = new GoogleGenerativeAI(process.env.API_KEY);

// üîπ Text-only generation
const textOnly = async (prompt) => {
  const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash-8b" });
  const result = await model.generateContent(prompt);
  return result.response.text();
};

// üîπ Chat with memory
const chat = async (chatHistory, prompt) => {
  const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash-8b" });
  const chatSession = model.startChat({ history: chatHistory });
  const result = await chatSession.sendMessage(prompt);
  return result.response.text();
};

// üîπ Multimodal (image + text)
const multimodal = async (prompt, imageBase64) => {
  const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash-8b" });
  const result = await model.generateContent([
    { text: prompt },
    {
      inlineData: {
        mimeType: "image/jpeg", // or "image/png" if needed
        data: imageBase64,
      },
    },
  ]);
  return result.response.text();
};

// üîπ Google Maps API - Get Lat/Lng from place name
const getMapLocation = async (place) => {
  const apiKey = process.env.MAPS_API_KEY;
  const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(place)}&key=${apiKey}`;
  const response = await axios.get(url);
  const result = response.data.results[0];
  if (!result) return null;

  return {
    lat: result.geometry.location.lat,
    lng: result.geometry.location.lng,
    address: result.formatted_address,
  };
};

// üîπ Chat with Travel Expert Role
const travelExpertChat = async (chatHistory, prompt) => {
  const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash-8b" });
  const chatSession = model.startChat({
    history: [
      {
        role: "user",
        parts: [{ text: "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ ‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" }],
      },
      ...chatHistory,
    ],
  });
  const result = await chatSession.sendMessage(prompt);
  return result.response.text();
};

module.exports = {
  textOnly,
  chat,
  multimodal,
  getMapLocation,
  travelExpertChat,
};
